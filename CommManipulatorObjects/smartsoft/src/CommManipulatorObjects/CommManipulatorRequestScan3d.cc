//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------

#include "CommManipulatorObjects/CommManipulatorRequestScan3d.hh"

using namespace CommManipulatorObjects;

CommManipulatorRequestScan3d::CommManipulatorRequestScan3d()
:	CommManipulatorRequestScan3dCore()
{  }


/**
 * Constructor to set all values.
 * NOTE that you have to keep this constructor consistent with the model!
 * Use  at your own choice.
 *
 * The preferred way to set values for initialization is:
 *      CommRepository::MyCommObject obj;
 *      obj.setX(1).setY(2).setZ(3)...;
CommManipulatorRequestScan3d::CommManipulatorRequestScan3d(const std::vector<double> &begin_joint_angles, const std::vector<double> &end_joint_angles, const double &laser_begin_angle, const double &laser_end_angle, const unsigned short &number_of_steps)
:	CommManipulatorRequestScan3dCore() // base constructor sets default values as defined in the model
{
	setBegin_joint_angles(begin_joint_angles);
	setEnd_joint_angles(end_joint_angles);
	setLaser_begin_angle(laser_begin_angle);
	setLaser_end_angle(laser_end_angle);
	setNumber_of_steps(number_of_steps);
}
 */

CommManipulatorRequestScan3d::CommManipulatorRequestScan3d(const CommManipulatorRequestScan3dCore &commManipulatorRequestScan3d)
:	CommManipulatorRequestScan3dCore(commManipulatorRequestScan3d)
{  }

CommManipulatorRequestScan3d::CommManipulatorRequestScan3d(const DATATYPE &commManipulatorRequestScan3d)
:	CommManipulatorRequestScan3dCore(commManipulatorRequestScan3d)
{  }

CommManipulatorRequestScan3d::~CommManipulatorRequestScan3d()
{  }
