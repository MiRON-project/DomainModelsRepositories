//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Christian Schlegel (schlegel@hs-ulm.de)
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

#include "CommLocalizationObjects/CommGpsFix.hh"
#include <SeRoNet/CommunicationObjects/Description/SelfDescription.hpp>
#include <SeRoNet/CommunicationObjects/Description/ElementPrimitives.hpp>
#pragma once


namespace SeRoNet {
namespace CommunicationObjects {
namespace Description {
// serialization for CommGpsFix
template <>
ComplexType::shp_t SelfDescription(CommLocalizationObjects::CommGpsFix *obj, std::string name)
{
	auto ret = std::make_shared<SeRoNet::CommunicationObjects::Description::ComplexType>(name);
	/// \todo check for ComplexObjects
	// add gps_timestamp
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementDouble(
				"gps_timestamp",
				std::bind(&CommLocalizationObjects::CommGpsFix::getGps_timestamp, obj),
				std::bind(&CommLocalizationObjects::CommGpsFix::setGps_timestamp, obj, std::placeholders::_1)
			)
		)
	);
	// add is_2D
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementBool(
				"is_2D",
				std::bind(&CommLocalizationObjects::CommGpsFix::getIs_2D, obj),
				std::bind(&CommLocalizationObjects::CommGpsFix::setIs_2D, obj, std::placeholders::_1)
			)
		)
	);
	// add is_3D
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementBool(
				"is_3D",
				std::bind(&CommLocalizationObjects::CommGpsFix::getIs_3D, obj),
				std::bind(&CommLocalizationObjects::CommGpsFix::setIs_3D, obj, std::placeholders::_1)
			)
		)
	);
	// add satellites_visible
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementInt32(
				"satellites_visible",
				std::bind(&CommLocalizationObjects::CommGpsFix::getSatellites_visible, obj),
				std::bind(&CommLocalizationObjects::CommGpsFix::setSatellites_visible, obj, std::placeholders::_1)
			)
		)
	);
	// add satellites_used
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementInt32(
				"satellites_used",
				std::bind(&CommLocalizationObjects::CommGpsFix::getSatellites_used, obj),
				std::bind(&CommLocalizationObjects::CommGpsFix::setSatellites_used, obj, std::placeholders::_1)
			)
		)
	);
	// add latitude
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementDouble(
				"latitude",
				std::bind(&CommLocalizationObjects::CommGpsFix::getLatitude, obj),
				std::bind(&CommLocalizationObjects::CommGpsFix::setLatitude, obj, std::placeholders::_1)
			)
		)
	);
	// add longitude
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementDouble(
				"longitude",
				std::bind(&CommLocalizationObjects::CommGpsFix::getLongitude, obj),
				std::bind(&CommLocalizationObjects::CommGpsFix::setLongitude, obj, std::placeholders::_1)
			)
		)
	);
	// add altitude
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementDouble(
				"altitude",
				std::bind(&CommLocalizationObjects::CommGpsFix::getAltitude, obj),
				std::bind(&CommLocalizationObjects::CommGpsFix::setAltitude, obj, std::placeholders::_1)
			)
		)
	);
	// add speed
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementDouble(
				"speed",
				std::bind(&CommLocalizationObjects::CommGpsFix::getSpeed, obj),
				std::bind(&CommLocalizationObjects::CommGpsFix::setSpeed, obj, std::placeholders::_1)
			)
		)
	);
	// add climb
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementDouble(
				"climb",
				std::bind(&CommLocalizationObjects::CommGpsFix::getClimb, obj),
				std::bind(&CommLocalizationObjects::CommGpsFix::setClimb, obj, std::placeholders::_1)
			)
		)
	);
	// add latitude_uncertainty
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementDouble(
				"latitude_uncertainty",
				std::bind(&CommLocalizationObjects::CommGpsFix::getLatitude_uncertainty, obj),
				std::bind(&CommLocalizationObjects::CommGpsFix::setLatitude_uncertainty, obj, std::placeholders::_1)
			)
		)
	);
	// add longitude_uncertainty
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementDouble(
				"longitude_uncertainty",
				std::bind(&CommLocalizationObjects::CommGpsFix::getLongitude_uncertainty, obj),
				std::bind(&CommLocalizationObjects::CommGpsFix::setLongitude_uncertainty, obj, std::placeholders::_1)
			)
		)
	);
	// add altitude_uncertainty
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementDouble(
				"altitude_uncertainty",
				std::bind(&CommLocalizationObjects::CommGpsFix::getAltitude_uncertainty, obj),
				std::bind(&CommLocalizationObjects::CommGpsFix::setAltitude_uncertainty, obj, std::placeholders::_1)
			)
		)
	);
	// add speed_uncertainty
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementDouble(
				"speed_uncertainty",
				std::bind(&CommLocalizationObjects::CommGpsFix::getSpeed_uncertainty, obj),
				std::bind(&CommLocalizationObjects::CommGpsFix::setSpeed_uncertainty, obj, std::placeholders::_1)
			)
		)
	);
	// add climb_uncertainty
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementDouble(
				"climb_uncertainty",
				std::bind(&CommLocalizationObjects::CommGpsFix::getClimb_uncertainty, obj),
				std::bind(&CommLocalizationObjects::CommGpsFix::setClimb_uncertainty, obj, std::placeholders::_1)
			)
		)
	);
	return ret;
} // end SelfDescription
} // end namespace Description
} // end namespace CommunicationObjects
} // end namespace SeRoNet
