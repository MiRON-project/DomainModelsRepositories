//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Christian Schlegel (schlegel@hs-ulm.de)
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

#include "CommNavigationObjects/CommGridMap.hh"
#include <SeRoNet/CommunicationObjects/Description/SelfDescription.hpp>
#include <SeRoNet/CommunicationObjects/Description/ElementPrimitives.hpp>
#pragma once

#include "CommBasicObjects/CommTimeStampOpcUa.hh"

namespace SeRoNet {
namespace CommunicationObjects {
namespace Description {
// serialization for CommGridMap
template <>
ComplexType::shp_t SelfDescription(CommNavigationObjects::CommGridMap *obj, std::string name)
{
	auto ret = std::make_shared<SeRoNet::CommunicationObjects::Description::ComplexType>(name);
	/// \todo check for ComplexObjects
	// add id
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementUInt32(
				"id",
				std::bind(&CommNavigationObjects::CommGridMap::getId, obj),
				std::bind(&CommNavigationObjects::CommGridMap::setId, obj, std::placeholders::_1)
			)
		)
	);
	// add is_valid
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementBool(
				"is_valid",
				std::bind(&CommNavigationObjects::CommGridMap::getIs_valid, obj),
				std::bind(&CommNavigationObjects::CommGridMap::setIs_valid, obj, std::placeholders::_1)
			)
		)
	);
	ret->add(
		SelfDescription(&(obj->getTime()), "CommTimeStamp")
	);
	// add xOffsetMM
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementInt32(
				"xOffsetMM",
				std::bind(&CommNavigationObjects::CommGridMap::getXOffsetMM, obj),
				std::bind(&CommNavigationObjects::CommGridMap::setXOffsetMM, obj, std::placeholders::_1)
			)
		)
	);
	// add yOffsetMM
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementInt32(
				"yOffsetMM",
				std::bind(&CommNavigationObjects::CommGridMap::getYOffsetMM, obj),
				std::bind(&CommNavigationObjects::CommGridMap::setYOffsetMM, obj, std::placeholders::_1)
			)
		)
	);
	// add xOffsetCells
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementInt32(
				"xOffsetCells",
				std::bind(&CommNavigationObjects::CommGridMap::getXOffsetCells, obj),
				std::bind(&CommNavigationObjects::CommGridMap::setXOffsetCells, obj, std::placeholders::_1)
			)
		)
	);
	// add yOffsetCells
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementInt32(
				"yOffsetCells",
				std::bind(&CommNavigationObjects::CommGridMap::getYOffsetCells, obj),
				std::bind(&CommNavigationObjects::CommGridMap::setYOffsetCells, obj, std::placeholders::_1)
			)
		)
	);
	// add cellSizeMM
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementInt32(
				"cellSizeMM",
				std::bind(&CommNavigationObjects::CommGridMap::getCellSizeMM, obj),
				std::bind(&CommNavigationObjects::CommGridMap::setCellSizeMM, obj, std::placeholders::_1)
			)
		)
	);
	// add xSizeMM
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementUInt32(
				"xSizeMM",
				std::bind(&CommNavigationObjects::CommGridMap::getXSizeMM, obj),
				std::bind(&CommNavigationObjects::CommGridMap::setXSizeMM, obj, std::placeholders::_1)
			)
		)
	);
	// add ySizeMM
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementUInt32(
				"ySizeMM",
				std::bind(&CommNavigationObjects::CommGridMap::getYSizeMM, obj),
				std::bind(&CommNavigationObjects::CommGridMap::setYSizeMM, obj, std::placeholders::_1)
			)
		)
	);
	// add xSizeCells
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementUInt32(
				"xSizeCells",
				std::bind(&CommNavigationObjects::CommGridMap::getXSizeCells, obj),
				std::bind(&CommNavigationObjects::CommGridMap::setXSizeCells, obj, std::placeholders::_1)
			)
		)
	);
	// add ySizeCells
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementUInt32(
				"ySizeCells",
				std::bind(&CommNavigationObjects::CommGridMap::getYSizeCells, obj),
				std::bind(&CommNavigationObjects::CommGridMap::setYSizeCells, obj, std::placeholders::_1)
			)
		)
	);
	// add size
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementUInt32(
				"size",
				std::bind(&CommNavigationObjects::CommGridMap::getSize, obj),
				std::bind(&CommNavigationObjects::CommGridMap::setSize, obj, std::placeholders::_1)
			)
		)
	);
	// add cell
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementUInt8(
				"cell",
				std::bind(&CommNavigationObjects::CommGridMap::getCell, obj),
				std::bind(&CommNavigationObjects::CommGridMap::setCell, obj, std::placeholders::_1)
			)
		)
	);
	return ret;
} // end SelfDescription
} // end namespace Description
} // end namespace CommunicationObjects
} // end namespace SeRoNet
