//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Christian Schlegel (schlegel@hs-ulm.de)
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

#include "CommNavigationObjects/CommGridMapRequest.hh"
#include <SeRoNet/CommunicationObjects/Description/SelfDescription.hpp>
#include <SeRoNet/CommunicationObjects/Description/ElementPrimitives.hpp>
#pragma once


namespace SeRoNet {
namespace CommunicationObjects {
namespace Description {
// serialization for CommGridMapRequest
template <>
ComplexType::shp_t SelfDescription(CommNavigationObjects::CommGridMapRequest *obj, std::string name)
{
	auto ret = std::make_shared<SeRoNet::CommunicationObjects::Description::ComplexType>(name);
	/// \todo check for ComplexObjects
	// add id
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementUInt32(
				"id",
				std::bind(&CommNavigationObjects::CommGridMapRequest::getId, obj),
				std::bind(&CommNavigationObjects::CommGridMapRequest::setId, obj, std::placeholders::_1)
			)
		)
	);
	// add xOffsetMM
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementInt32(
				"xOffsetMM",
				std::bind(&CommNavigationObjects::CommGridMapRequest::getXOffsetMM, obj),
				std::bind(&CommNavigationObjects::CommGridMapRequest::setXOffsetMM, obj, std::placeholders::_1)
			)
		)
	);
	// add yOffsetMM
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementInt32(
				"yOffsetMM",
				std::bind(&CommNavigationObjects::CommGridMapRequest::getYOffsetMM, obj),
				std::bind(&CommNavigationObjects::CommGridMapRequest::setYOffsetMM, obj, std::placeholders::_1)
			)
		)
	);
	// add xSizeMM
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementUInt32(
				"xSizeMM",
				std::bind(&CommNavigationObjects::CommGridMapRequest::getXSizeMM, obj),
				std::bind(&CommNavigationObjects::CommGridMapRequest::setXSizeMM, obj, std::placeholders::_1)
			)
		)
	);
	// add ySizeMM
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementUInt32(
				"ySizeMM",
				std::bind(&CommNavigationObjects::CommGridMapRequest::getYSizeMM, obj),
				std::bind(&CommNavigationObjects::CommGridMapRequest::setYSizeMM, obj, std::placeholders::_1)
			)
		)
	);
	// add curLtmState
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementBool(
				"curLtmState",
				std::bind(&CommNavigationObjects::CommGridMapRequest::getCurLtmState, obj),
				std::bind(&CommNavigationObjects::CommGridMapRequest::setCurLtmState, obj, std::placeholders::_1)
			)
		)
	);
	// add curLtmThreshold
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementUInt32(
				"curLtmThreshold",
				std::bind(&CommNavigationObjects::CommGridMapRequest::getCurLtmThreshold, obj),
				std::bind(&CommNavigationObjects::CommGridMapRequest::setCurLtmThreshold, obj, std::placeholders::_1)
			)
		)
	);
	return ret;
} // end SelfDescription
} // end namespace Description
} // end namespace CommunicationObjects
} // end namespace SeRoNet
