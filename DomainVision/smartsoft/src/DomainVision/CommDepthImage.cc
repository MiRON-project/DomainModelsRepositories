//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------

#include "DomainVision/CommDepthImage.hh"

using namespace DomainVision;

CommDepthImage::CommDepthImage()
:	CommDepthImageCore()
{  }


/**
 * Constructor to set all values.
 * NOTE that you have to keep this constructor consistent with the model!
 * Use  at your own choice.
 *
 * The preferred way to set values for initialization is:
 *      CommRepository::MyCommObject obj;
 *      obj.setX(1).setY(2).setZ(3)...;
CommDepthImage::CommDepthImage(const unsigned int &width, const unsigned int &height, const DomainVision::DepthFormatType &format, const unsigned int &pixel_size, const double &min_distcance, const double &max_distcance, const std::vector<unsigned char> &data, const std::vector<double> &intrinsic_m, const std::vector<double> &extrinsic_m, const std::vector<double> &stereo_m, const std::vector<double> &distortion_m, const unsigned int &seq_count, const bool &is_valid, const DomainVision::ImageDistortionModel &distortion_model)
:	CommDepthImageCore() // base constructor sets default values as defined in the model
{
	setWidth(width);
	setHeight(height);
	setFormat(format);
	setPixel_size(pixel_size);
	setMin_distcance(min_distcance);
	setMax_distcance(max_distcance);
	setData(data);
	setIntrinsic_m(intrinsic_m);
	setExtrinsic_m(extrinsic_m);
	setStereo_m(stereo_m);
	setDistortion_m(distortion_m);
	setDistortion_model(distortion_model);
	setSeq_count(seq_count);
	setIs_valid(is_valid);
}
 */

CommDepthImage::CommDepthImage(const CommDepthImageCore &commDepthImage)
:	CommDepthImageCore(commDepthImage)
{  }

CommDepthImage::CommDepthImage(const DATATYPE &commDepthImage)
:	CommDepthImageCore(commDepthImage)
{  }

CommDepthImage::~CommDepthImage()
{  }
