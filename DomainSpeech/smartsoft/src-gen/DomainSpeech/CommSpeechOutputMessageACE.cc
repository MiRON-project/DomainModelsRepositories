//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#include "DomainSpeech/CommSpeechOutputMessageACE.hh"
#include <ace/SString.h>
#include "CommBasicObjects/CommTimeStampACE.hh"

// serialization operator for element CommSpeechOutputMessage
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const DomainSpeechIDL::CommSpeechOutputMessage &data)
{
	ACE_CDR::Boolean good_bit = true;
	// serialize list-element time
	good_bit = good_bit && cdr << data.time;
	// serialize list-element reset
	good_bit = good_bit && cdr.write_boolean(data.reset);
	// serialize list-element ttl
	good_bit = good_bit && cdr.write_float(data.ttl);
	// serialize list-element text
	good_bit = good_bit && cdr << ACE_CString(data.text.c_str());
	
	return good_bit;
}

// de-serialization operator for element CommSpeechOutputMessage
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, DomainSpeechIDL::CommSpeechOutputMessage &data)
{
	ACE_CDR::Boolean good_bit = true;
	// deserialize type element time
	good_bit = good_bit && cdr >> data.time;
	// deserialize type element reset
	good_bit = good_bit && cdr.read_boolean(data.reset);
	// deserialize type element ttl
	good_bit = good_bit && cdr.read_float(data.ttl);
	// deserialize string-type element text
	ACE_CString data_text_str;
	good_bit = good_bit && cdr >> data_text_str;
	data.text = data_text_str.c_str();
	
	return good_bit;
}

// serialization operator for CommunicationObject CommSpeechOutputMessage
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const DomainSpeech::CommSpeechOutputMessage &obj)
{
	return cdr << obj.get();
}

// de-serialization operator for CommunicationObject CommSpeechOutputMessage
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, DomainSpeech::CommSpeechOutputMessage &obj)
{
	return cdr >> obj.set();
}
