//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#include "CommRobotinoObjects/CommPathNavigationNodeRequestACE.hh"
#include <ace/SString.h>
#include "CommRobotinoObjects/CommPathNodeACE.hh"
#include "CommRobotinoObjects/enumNavigationNodeRequestTypeData.hh"

// serialization operator for element CommPathNavigationNodeRequest
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommRobotinoObjectsIDL::CommPathNavigationNodeRequest &data)
{
	ACE_CDR::Boolean good_bit = true;
	// serialize list-element requestType
	good_bit = good_bit && cdr.write_long(data.requestType);
	// serialize list-element nodesList
	good_bit = good_bit && cdr << ACE_Utils::truncate_cast<ACE_CDR::ULong>(data.nodesList.size());
	std::vector<CommRobotinoObjectsIDL::CommPathNode>::const_iterator data_nodesListIt;
	for(data_nodesListIt=data.nodesList.begin(); data_nodesListIt!=data.nodesList.end(); data_nodesListIt++) {
		good_bit = good_bit && cdr << *data_nodesListIt;
	}
	// serialize list-element robotID
	good_bit = good_bit && cdr << ACE_CString(data.robotID.c_str());
	
	return good_bit;
}

// de-serialization operator for element CommPathNavigationNodeRequest
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommRobotinoObjectsIDL::CommPathNavigationNodeRequest &data)
{
	ACE_CDR::Boolean good_bit = true;
	// deserialize type element requestType
	good_bit = good_bit && cdr.read_long(data.requestType);
	// deserialize list-type element nodesList
	ACE_CDR::ULong data_nodesListNbr;
	good_bit = good_bit && cdr >> data_nodesListNbr;
	data.nodesList.clear();
	CommRobotinoObjectsIDL::CommPathNode data_nodesListItem;
	for(ACE_CDR::ULong i=0; i<data_nodesListNbr; ++i) {
		good_bit = good_bit && cdr >> data_nodesListItem;
		data.nodesList.push_back(data_nodesListItem);
	}
	// deserialize string-type element robotID
	ACE_CString data_robotID_str;
	good_bit = good_bit && cdr >> data_robotID_str;
	data.robotID = data_robotID_str.c_str();
	
	return good_bit;
}

// serialization operator for CommunicationObject CommPathNavigationNodeRequest
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommRobotinoObjects::CommPathNavigationNodeRequest &obj)
{
	return cdr << obj.get();
}

// de-serialization operator for CommunicationObject CommPathNavigationNodeRequest
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommRobotinoObjects::CommPathNavigationNodeRequest &obj)
{
	return cdr >> obj.set();
}
