//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#include "CommRobotinoObjects/CommDetectedTagsACE.hh"
#include <ace/SString.h>
#include "CommRobotinoObjects/CommVisualTagACE.hh"

// serialization operator for element CommDetectedTags
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommRobotinoObjectsIDL::CommDetectedTags &data)
{
	ACE_CDR::Boolean good_bit = true;
	// serialize list-element tags
	good_bit = good_bit && cdr << ACE_Utils::truncate_cast<ACE_CDR::ULong>(data.tags.size());
	std::vector<CommRobotinoObjectsIDL::CommVisualTag>::const_iterator data_tagsIt;
	for(data_tagsIt=data.tags.begin(); data_tagsIt!=data.tags.end(); data_tagsIt++) {
		good_bit = good_bit && cdr << *data_tagsIt;
	}
	// serialize list-element valid
	good_bit = good_bit && cdr.write_boolean(data.valid);
	
	return good_bit;
}

// de-serialization operator for element CommDetectedTags
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommRobotinoObjectsIDL::CommDetectedTags &data)
{
	ACE_CDR::Boolean good_bit = true;
	// deserialize list-type element tags
	ACE_CDR::ULong data_tagsNbr;
	good_bit = good_bit && cdr >> data_tagsNbr;
	data.tags.clear();
	CommRobotinoObjectsIDL::CommVisualTag data_tagsItem;
	for(ACE_CDR::ULong i=0; i<data_tagsNbr; ++i) {
		good_bit = good_bit && cdr >> data_tagsItem;
		data.tags.push_back(data_tagsItem);
	}
	// deserialize type element valid
	good_bit = good_bit && cdr.read_boolean(data.valid);
	
	return good_bit;
}

// serialization operator for CommunicationObject CommDetectedTags
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommRobotinoObjects::CommDetectedTags &obj)
{
	return cdr << obj.get();
}

// de-serialization operator for CommunicationObject CommDetectedTags
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommRobotinoObjects::CommDetectedTags &obj)
{
	return cdr >> obj.set();
}
