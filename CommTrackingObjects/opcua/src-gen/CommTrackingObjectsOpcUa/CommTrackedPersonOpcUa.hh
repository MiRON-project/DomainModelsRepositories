//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Christian Schlegel (schlegel@hs-ulm.de)
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

#include "CommTrackingObjects/CommTrackedPerson.hh"
#include <SeRoNet/CommunicationObjects/Description/SelfDescription.hpp>
#include <SeRoNet/CommunicationObjects/Description/ElementPrimitives.hpp>
#pragma once


namespace SeRoNet {
namespace CommunicationObjects {
namespace Description {
// serialization for CommTrackedPerson
template <>
ComplexType::shp_t SelfDescription(CommTrackingObjects::CommTrackedPerson *obj, std::string name)
{
	auto ret = std::make_shared<SeRoNet::CommunicationObjects::Description::ComplexType>(name);
	/// \todo check for ComplexObjects
	// add id
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementUInt32(
				"id",
				std::bind(&CommTrackingObjects::CommTrackedPerson::getId, obj),
				std::bind(&CommTrackingObjects::CommTrackedPerson::setId, obj, std::placeholders::_1)
			)
		)
	);
	// add x
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementDouble(
				"x",
				std::bind(&CommTrackingObjects::CommTrackedPerson::getX, obj),
				std::bind(&CommTrackingObjects::CommTrackedPerson::setX, obj, std::placeholders::_1)
			)
		)
	);
	// add y
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementDouble(
				"y",
				std::bind(&CommTrackingObjects::CommTrackedPerson::getY, obj),
				std::bind(&CommTrackingObjects::CommTrackedPerson::setY, obj, std::placeholders::_1)
			)
		)
	);
	// add z
	ret->add(
		SeRoNet::CommunicationObjects::Description::IDescription::shp_t(
			new SeRoNet::CommunicationObjects::Description::ElementDouble(
				"z",
				std::bind(&CommTrackingObjects::CommTrackedPerson::getZ, obj),
				std::bind(&CommTrackingObjects::CommTrackedPerson::setZ, obj, std::placeholders::_1)
			)
		)
	);
	return ret;
} // end SelfDescription
} // end namespace Description
} // end namespace CommunicationObjects
} // end namespace SeRoNet
