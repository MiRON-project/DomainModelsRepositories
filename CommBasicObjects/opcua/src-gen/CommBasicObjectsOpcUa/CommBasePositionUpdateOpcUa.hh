//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Christian Schlegel (schlegel@hs-ulm.de)
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

#include "CommBasicObjects/CommBasePositionUpdate.hh"
#include <SeRoNet/CommunicationObjects/Description/SelfDescription.hpp>
#include <SeRoNet/CommunicationObjects/Description/ElementPrimitives.hpp>
#pragma once

#include "CommBasicObjects/CommTimeStampOpcUa.hh"
#include "CommBasicObjects/CommBasePoseOpcUa.hh"
#include "CommBasicObjects/CommBasePoseOpcUa.hh"
#include "CommBasicObjects/CommBaseVelocityOpcUa.hh"
#include "CommBasicObjects/CommBaseVelocityOpcUa.hh"

namespace SeRoNet {
namespace CommunicationObjects {
namespace Description {
// serialization for CommBasePositionUpdate
template <>
ComplexType::shp_t SelfDescription(CommBasicObjects::CommBasePositionUpdate *obj, std::string name)
{
	auto ret = std::make_shared<SeRoNet::CommunicationObjects::Description::ComplexType>(name);
	/// \todo check for ComplexObjects
	ret->add(
		SelfDescription(&(obj->getTimeStamp()), "CommTimeStamp")
	);
	ret->add(
		SelfDescription(&(obj->getPose()), "CommBasePose")
	);
	ret->add(
		SelfDescription(&(obj->getCorrectedPose()), "CommBasePose")
	);
	ret->add(
		SelfDescription(&(obj->getVelocity()), "CommBaseVelocity")
	);
	ret->add(
		SelfDescription(&(obj->getCorrectedVelocity()), "CommBaseVelocity")
	);
	return ret;
} // end SelfDescription
} // end namespace Description
} // end namespace CommunicationObjects
} // end namespace SeRoNet
